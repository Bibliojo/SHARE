<record xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcq="http://purl.org/dc/terms/" rownumber="75"><dc:title>Asynchronous parallel generating set search for linearly-constrained optimization.</dc:title><dc:creator>Kolda, Tamara G.; Griffin, Joshua; Lewis, Robert Michael</dc:creator><dc:subject/><dc:subjectRelated/><dc:description>We describe an asynchronous parallel derivative-free algorithm for linearly-constrained optimization. Generating set search (GSS) is the basis of ourmethod. At each iteration, a GSS algorithm computes a set of search directionsand corresponding trial points and then evaluates the objective function valueat each trial point. Asynchronous versions of the algorithm have been developedin the unconstrained and bound-constrained cases which allow the iterations tocontinue (and new trial points to be generated and evaluated) as soon as anyother trial point completes. This enables better utilization of parallel resourcesand a reduction in overall runtime, especially for problems where the objec-tive function takes minutes or hours to compute. For linearly-constrained GSS,the convergence theory requires that the set of search directions conform to the3 nearby boundary. The complexity of developing the asynchronous algorithm forthe linearly-constrained case has to do with maintaining a suitable set of searchdirections as the search progresses and is the focus of this research. We describeour implementation in detail, including how to avoid function evaluations bycaching function values and using approximate look-ups. We test our imple-mentation on every CUTEr test problem with general linear constraints and upto 1000 variables. Without tuning to individual problems, our implementationwas able to solve 95% of the test problems with 10 or fewer variables, 75%of the problems with 11-100 variables, and nearly half of the problems with100-1000 variables. To the best of our knowledge, these are the best resultsthat have ever been achieved with a derivative-free method. Our asynchronousparallel implementation is freely available as part of the APPSPACK software.4</dc:description><dcq:publisher/><dcq:publisherAvailability/><dcq:publisherResearch>Sandia National Laboratories (SNL-CA), Livermore, CA (United States)</dcq:publisherResearch><dcq:publisherSponsor>USDOE National Nuclear Security Administration (NNSA)</dcq:publisherSponsor><dcq:publisherCountry>United States</dcq:publisherCountry><dc:date>2007-04-01</dc:date><dc:language>English</dc:language><dc:type>Technical Report</dc:type><dcq:typeQualifier/><dc:relation/><dc:coverage/><dc:format>Medium: ED; Size: 60 p.</dc:format><dc:identifier>OSTI ID: 1139970, Legacy ID: OSTI ID: 1139970</dc:identifier><dc:identifierReport>SAND2007-2558</dc:identifierReport><dcq:identifierDOEcontract>DE-AC04-94AL85000</dcq:identifierDOEcontract><dc:identifierOther>Other: 523525</dc:identifierOther><dc:doi/><dc:rights/><dc:dateEntry>2014-07-21</dc:dateEntry><dc:ostiId>1139970</dc:ostiId><dcq:identifier-purl type="application/pdf">http://www.osti.gov/scitech/servlets/purl/1139970</dcq:identifier-purl><dcq:mediaSequence/></record>